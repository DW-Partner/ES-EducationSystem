@charset 'UTF-8';

$breakpoints: (
  'phone': 320px,
  'tablet': 768px,
  'desktop': 1024px
) !default;


$media-expressions: (
  'screen': 'screen',
  'print': 'print',
  'handheld': 'handheld',
  'landscape': '(orientation: landscape)',
  'portrait': '(orientation: portrait)',
  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)',
  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi)'
) !default;

$unit-intervals: (
  'px': 1,
  'em': 0.01,
  'rem': 0.1
) !default;

$im-media-support: true !default;

$im-no-media-breakpoint: 'desktop' !default;

$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;

@function log($message) {
  @if feature-exists('at-error') {
    @error $message;
  } @else {
    @warn $message;
    $_: noop();
  }

  @return $message;
}

@mixin log($message) {
  @if log($message) {}
}

@function noop() {}

@function im-intercepts-static-breakpoint($conditions...) {
  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);

  @if not $no-media-breakpoint-value {
    @if log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}
  }

  @each $condition in $conditions {
    @if not map-has-key($media-expressions, $condition) {
      $operator: get-expression-operator($condition);
      $prefix: get-expression-prefix($operator);
      $value: get-expression-value($condition, $operator);

      // scss-lint:disable SpaceAroundOperator
      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or
          ($prefix == 'min' and $value > $no-media-breakpoint-value) {
        @return false;
      }
    } @else if not index($im-no-media-expressions, $condition) {
      @return false;
    }
  }

  @return true;
}

@function get-expression-operator($expression) {
  @each $operator in ('>=', '>', '<=', '<') {
    @if str-index($expression, $operator) {
      @return $operator;
    }
  }

  $_: log('No operator found in `#{$expression}`.');
}

@function get-expression-dimension($expression, $operator) {
  $operator-index: str-index($expression, $operator);
  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);
  $dimension: 'width';

  @if str-length($parsed-dimension) > 0 {
    $dimension: $parsed-dimension;
  }

  @return $dimension;
}

@function get-expression-prefix($operator) {
  @return if(index(('<', '<='), $operator), 'max', 'min');
}

@function get-expression-value($expression, $operator) {
  $operator-index: str-index($expression, $operator);
  $value: str-slice($expression, $operator-index + str-length($operator));

  @if map-has-key($breakpoints, $value) {
    $value: map-get($breakpoints, $value);
  } @else {
    $value: to-number($value);
  }

  $interval: map-get($unit-intervals, unit($value));

  @if not $interval {
    $_: log('Unknown unit `#{unit($value)}`.');
  }

  @if $operator == '>' {
    $value: $value + $interval;
  } @else if $operator == '<' {
    $value: $value - $interval;
  }

  @return $value;
}

@function parse-expression($expression) {
  // If it is part of $media-expressions, it has no operator
  // then there is no need to go any further, just return the value
  @if map-has-key($media-expressions, $expression) {
    @return map-get($media-expressions, $expression);
  }

  $operator: get-expression-operator($expression);
  $dimension: get-expression-dimension($expression, $operator);
  $prefix: get-expression-prefix($operator);
  $value: get-expression-value($expression, $operator);

  @return '(#{$prefix}-#{$dimension}: #{$value})';
}

@function slice($list, $start: 1, $end: length($list)) {
  @if length($list) < 1 or $start > $end {
    @return ();
  }

  $result: ();

  @for $i from $start through $end {
    $result: append($result, nth($list, $i));
  }

  @return $result;
}

@function to-number($value) {
  @if type-of($value) == 'number' {
    @return $value;
  } @else if type-of($value) != 'string' {
    $_: log('Value for `to-number` should be a number or a string.');
  }

  $result: 0;
  $digits: 0;
  $minus: str-slice($value, 1, 1) == '-';
  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);

  @for $i from if($minus, 2, 1) through str-length($value) {
    $character: str-slice($value, $i, $i);

    @if not (index(map-keys($numbers), $character) or $character == '.') {
      @return to-length(if($minus, -$result, $result), str-slice($value, $i))
    }

    @if $character == '.' {
      $digits: 1;
    } @else if $digits == 0 {
      $result: $result * 10 + map-get($numbers, $character);
    } @else {
      $digits: $digits * 10;
      $result: $result + map-get($numbers, $character) / $digits;
    }
  }

  @return if($minus, -$result, $result);
}

@function to-length($value, $unit) {
  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);

  @if not index(map-keys($units), $unit) {
    $_: log('Invalid unit `#{$unit}`.');
  }

  @return $value * map-get($units, $unit);
}

@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {
  // Save global configuration
  $global-breakpoints: $breakpoints;
  $global-media-expressions: $media-expressions;

  // Update global configuration
  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;
  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;

  @content;

  // Restore global configuration
  $breakpoints: $global-breakpoints !global;
  $media-expressions: $global-media-expressions !global;
}

@mixin media($conditions...) {
  // scss-lint:disable SpaceAroundOperator
  @if ($im-media-support and length($conditions) == 0) or
      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {
    @content;
  } @else if ($im-media-support and length($conditions) > 0) {
    @media #{unquote(parse-expression(nth($conditions, 1)))} {
      // Recursive call
      @include media(slice($conditions, 2)...) {
        @content;
      }
    }
  }
}

$breakpoints: (
    'ip5': 320px,
    'ip6': 375px,
    'ip6Plus': 414px,
    'ipadMini':512px,
    'ipad':768px,
    'pc':1000px
);

$size:100;
$windowWidth:320;
$UIwidth:750;
@function r($pixel){
/*             200   / 100  /(1000/1000)
             ($pixel/$UIwidth) * ($windowWidth/$size)*/
    @return $pixel / $size/($UIwidth/$windowWidth) * 1rem;
    /*// @return $pixel+px;*/
}
html{
    @include media("<ip5"){
        font-size: 320/$windowWidth*$size+px;
    }
    @include media(">=ip5","<ip6"){
        font-size: 320/$windowWidth*$size+px;
    }
    @include media(">=ip6","<ip6Plus"){
        font-size: 375/$windowWidth*$size+px;
    }
    @include media(">=ip6Plus","<ipadMini"){
        font-size: 414/$windowWidth*$size+px;
    }
    @include media(">=ipadMini","<ipad"){
        font-size: 512/$windowWidth*$size+px;
    }
    @include media(">=ipad","<pc"){
        font-size: 768/$windowWidth*$size+px;
    }
    @include media(">=pc"){
        font-size: 1000/$windowWidth*$size+px;
    }
}
@mixin box-sizing ($sizing:border-box) {
    -webkit-box-sizing:$sizing;     
       -moz-box-sizing:$sizing;
            box-sizing:$sizing;
}

.border-1px {
  position: relative;
  &:after {content: '';position: absolute;top: 0;right: 0;bottom: 0;left: 0;
    transform-origin: 0 0;
    -moz-transform-origin: 0 0;
    -webkit-transform-origin: 0 0;
    transform: scale(1);
    -moz-transform: scale(1);
    -webkit-transform: scale(1);
    pointer-events: none;
  }

  @at-root {
    @media only screen and (-webkit-min-device-pixel-ratio: 2) {
      .border-1px:after {
        right: -100%;
        bottom: -100%;
        transform: scale(0.5);
        -moz-transform: scale(0.5);
        -webkit-transform: scale(0.5);
      }
    }
  @media only screen and (-webkit-min-device-pixel-ratio: 3) {
    .border-1px:after {
      right: -200%;
      bottom: -200%;
      transform: scale(0.3333);
    }
  }
}
}

html,body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,form,fieldset,legend,p,table,th,td,iframe,input,figure{margin:0;padding:0;}
header,section,footer{display:block;}
table{border-collapse:collapse;border-spacing:0;table-layout:fixed;}
img{border:0;}
li{list-style:none;}
em,i{font-style:normal;}
a{text-decoration:none; -webkit-tap-highlight-color: rgba(0,0,0,0); }
a:focus{outline:0;}
textarea{resize:none;overflow-x:hidden;overflow-y:auto;outline: none;}
body{font:14px/20px "Microsoft YaHei","Hiragino Sans GB","stheitisclight","sans-serif";min-width:320px;word-wrap:break-word;-webkit-overflow-scrolling:touch;overflow-x:hidden;}
.container { height: 100%; }
header, nav, footer,article,section,aside{
	display: block;
}
h1,h2,h3,h4,h5,h6{
	margin: 0;
}
/*初始化样式end*/


body {
    background: #fff;
    /*background: #0572d1;*/
    color: #ff5f89;

}

a,
a:hover,
a:active,
a:visited {
    color: #666;
}

.none{
    display: none;
}
.main {
    width: 100%;
    max-width: r(1500);
    height: 100%;
    position: fixed;
    top: 0;
    left: 50%;
    transform: translate(-50%, 0);
    overflow: hidden;
    background: #ff5f89;

    background: url(http://127.0.0.1/images/1_bg_03.png) no-repeat center 0;
    background-size: 100% 100%;
    .bottom {
        position: absolute;
        left: 0;
        bottom: 0;
        width: 100%;
        height: r(75);
        padding-top: r(280);
        z-index: 11;
        .arrow {
            width: r(50);
            height: r(28);
            background: url(http://127.0.0.1/images/ico_up.png) no-repeat center 0;
            background-size: 100% 100%;
            position: absolute;
            left: 50%;
            bottom: r(70);
            transform: translate(-50%, 0);
            animation: arrow 1s infinite;
        }
        p {
            color: #ff5f89;
            line-height: r(60);
            text-align: center;
            font-size: r(26);
            em {
                padding: 0 r(18);
                background: url(http://127.0.0.1/images/ico_02.png) no-repeat left center;
                background-size: r(28) r(23);
            }
        }
    }
}
.page_num_box{
    display: none;
}


@keyframes arrow {
    0% {
        opacity: 1;
        bottom: r(70);
    }
    100% {
        opacity: 0;
        bottom: r(110);
    }
}

@keyframes animate_rotate {
    0% {
        opacity: 0;
        transform: rotate(540deg) scale(0.1);
    }
    100% {
        opacity: 1;
        transform: rotate(0) scale(1);
    }
}
@keyframes animate_bigger {
    0% {
        opacity: 0;
        transform: scale(0.1);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

div.hide_page {
    opacity: 0;
}

@keyframes hide_page {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

div.show_page_next {
    display: block;
    -webkit-animation: show_next 0.4s;
    -o-animation: show_next 0.4s;
    -moz-animation: show_next 0.4s;
    animation: show_next 0.4s;
    z-index: 2;
    opacity: 1;
}

@keyframes show_next {
    0% {
        top: 100%;
    }
    100% {
        top: 0%;
    }
}

div.show_page_prev {
    display: block;
    -webkit-animation: show_prev 0.4s;
    -o-animation: show_prev 0.4s;
    -moz-animation: show_prev 0.4s;
    animation: show_prev 0.4s;
    z-index: 2;
    opacity: 1;
}

@keyframes show_prev {
    0% {
        top: -100%;
    }
    100% {
        top: 0;
    }
}
.up, .down{
    padding: 0 0 0 r(30);
    color: #f97575;
    background: url(http://127.0.0.1/images/ico_8_up.png) no-repeat r(4) center;
    background-size: r(22) r(31);
}
.down{
    color: #6fe065;
    background: url(http://127.0.0.1/images/ico_8_down.png) no-repeat r(4) center;
    background-size: r(22) r(31);
}



.user_box_index {
    padding-top: r(120);
    background: url(http://127.0.0.1/images/ico_12.png) no-repeat center r(520);
    background-size: r(474) r(14);
    img {
        display: block;
        margin: 0 auto r(10);
        width: r(360);
        height: r(360);
        border-radius: 50%;
        animation: animation_big 1s;
    }
    p {
        text-align: center;
        font-size: r(28);
        line-height: r(40);
    }
    .name{
        text-align: center;
        font-size: r(32);
        line-height: r(40);
    }
}
.user_box {
    height: r(60);
    margin: 0 r(40);
    padding: r(65) 0 r(30);
    line-height: r(60);
    font-size: r(30);
    color: #fff;
    color: #ff5f89;
    border-bottom: 1px solid #ff5f89;
    img {
        display: block;
        float: left;
        width: r(60);
        height: r(60);
        border-radius: 50%;
        margin-right: r(15);
    }
    p {
        color: #fff;
        color: #ff5f89;
        span{
            float: right;
            font-size: r(24);
            color: #fff;
            color: #ff5f89;
        }
    }
}
.page_item {
    opacity: 0;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
   /* background: url(http://127.0.0.1/images/bg_page_item.jpg) no-repeat left bottom;
    background-size: 100% 100%;*/
}




@keyframes animation_open {
    0% {
        border-radius: 50%;
        opacity: 0;
        transform: scale(0.1);
    }
}
@keyframes animation_small {
    0% {
        opacity: 1;
        transform: scale(50);
    }
}
@keyframes animation_big {
    0% {
        opacity: 1;
        transform: scale(0);
    }
}
@keyframes animation_up {
    0% {
        top: r(600);
    }
}
@keyframes animation_down {
    0% {
        top: r(-600);
    }
}
@keyframes animation_right {
    0% {
        left: r(-600);
    }
}
@keyframes animation_left {
    0% {
        right: r(-600);
    }
}

.contentBox{
    opacity: 1;
    overflow: hidden;
    position: absolute;
    left: 0;
    top: r(200);
    bottom: 0;
    width: 100%;
    line-height: r(60);
    font-size: r(32);
    img{
        width: 90%;
        display: block;
        margin: 0 auto r(30);
    }
    p{
        padding: r(60);
        position: relative;
    }
}

.page_item_0,
.page_index {
    opacity: 1;
    z-index: 1;
    .title {
        background: url(http://127.0.0.1/images/bg_index_title.png) no-repeat center r(60);
        background-size: r(510) r(406);
        padding-top: r(500);
        text-align: center;
        font-size: r(28);
        line-height: r(50);
        text-align: center;
        animation: animate_rotate 1s;
        color: #fff;
        color: #ff5f89;
    }
}
.page_item_3{
    .contentBox{
        img{
            animation: animation_open 1.5s;
        }
        &:before{
            opacity:0;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%,50%);
            transform: scale(30);
            content:'❤';
            animation: animation_big 1.5s ease 1s;
        }
    }
}

.page_item_4{
    .contentBox{
        img{
            animation: animation_open 1s;
        }
        &:before{
            opacity:0;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%,50%);
            content:'❤';
            animation: animation_small 1.5s ease 1s;
            /*animation-delay:1s;*/
        }
    }
}

.page_item_5{
    .contentBox{
        img{
            animation: animation_open 1s;
        }
        &:before{
            opacity:0;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%,50%);
            transform: scale(30);
            content:'****';
            animation: animation_big 1.5s ease 1s;
        }
    }
}

.page_item_6{
    .contentBox{
        img{
            animation: animation_open 1s;
        }
        &:before{
            opacity:0;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%,50%);
            transform: scale(50);
            content:'❤';
            animation: animation_big 1.5s ease 1s;
        }
    }
}
.page_item_7{
    .contentBox{
        img{
            animation: animation_open 1s;
        }
        p{
            top: 0;
            animation: animation_up 1.6s;
        }
        &:before{
            opacity:0;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%,50%);
            transform: scale(30);
            content:'****';
            animation: animation_big 1.5s ease 1s;
        }
    }
}

.page_item_8{
    .contentBox{
        img{
            width: r(360);
            height: r(360);
            margin: r(60) auto 0;
            border-radius: 50%;
            animation: animation_open 1s;
        }
        p{
            top: 0;
            line-height:r(50);
            font-size:r(40);
            padding: r(40) r(80);
        }
        p:nth-child(2){
            margin-top: r(30);
            animation: animation_down 1.6s;
        }
        p:nth-child(3){
            animation: animation_up 1.6s;
        }
        &:before{
            opacity:0;
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%,50%);
            transform: scale(30);
            content:'❤';
            animation: animation_big 1.5s ease 1s;
        }
    }
}

.page_item_1 {
    .contentBox{
        img{
            margin-top: r(80);
            animation: animation_open 1s;
        }
        p{
            margin-top: r(80);
            left: 0;
            animation: animation_right 1.6s;
        }
    }
    @keyframes snowAnimation{  
        0%{  
            bottom:100%;  
            opacity:0;  
        }  
        30%{  
            opacity:1;  
            transform: rotate(360deg);  
        }  
        100%{  
            transform: rotate(0deg);  
            bottom:0;  
        }  
    } 
    .bg_1, .bg_2, .bg_3{  
        position:absolute;
        width: r(50);
        height: r(57);
        opacity:1;
        bottom:0;
        animation: snowAnimation 5s;
        background-image: url(http://127.0.0.1/images/snow_bg_2.png);
        background-size: r(50) r(171);
    }
    .bg_2{
        width: r(43);
        height: r(49);
        background-position: 0 r(-57);

    }
    .bg_3{
        width: r(34);
        height: r(40);
        background-position: 0 r(-114);

    }
    .snowItem{  
        position:fixed;
        z-index: 11;
        top: 0;
    }

}

.page_item_2 {

    .contentBox{
        line-height:r(60);
        font-size:r(50);
        box-sizing: border-box;
        padding: r(60);
    }
    .contentBox span{
        float:left;
        color:#ff5f89;
        text-shadow: r(4) r(4) r(4) #ddd;
    }

    @keyframes jumpAnimation{
        0%{
            margin-top: 0;
        }
        100%{
            opacity:1;
            margin-top: r(64);
        }
    }
    .jump{
        display: none;
        animation: jumpAnimation 0.7s;
        opacity:1;
        margin-top: r(64);
    }
    @keyframes picAnimation{
        0%{
            opacity:0;
            transform: rotate(480deg);
        }
        100%{
            opacity:1;
        }
    }
    .pic, .hide{
        position:absolute;
        z-index:3;
        border-radius: r(40);
        overflow:hidden;
        border:r(7) solid #fff;
        background:#fff;
        animation: picAnimation 1s;
    }
    @keyframes hideAnimation{
        0%{
            opacity:1;
        }
        100%{
            opacity:0;
            transform: rotate(720deg);
        }
    }
    .hide{
        animation: hideAnimation 1s;
        opacity:0;
    }
    .pic strong{
        width: r(48);
        height: r(48);
        line-height: r(48);
        text-align: center;
        position:absolute;
        right:r(20);
        top:r(10);
        z-index:4;
        color:#666;
        font-size:r(32);
        cursor:pointer;
        background: #ddd;
        border-radius: r(6);
    }
    .pic img{
        display:block;
        width:100%;
        border-radius: r(40);
    }
}








